// <auto-generated />
using System;
using EMarketNovi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EMarketNovi.Migrations
{
    [DbContext(typeof(OOADContext))]
    [Migration("20190614130230_nazivi")]
    partial class nazivi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EMarketNovi.Models.Narudzba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Isporuceno");

                    b.Property<int?>("Klijent");

                    b.Property<int>("KlijentId");

                    b.Property<string>("VrstaPlacanja")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Klijent");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("EMarketNovi.Models.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Ime")
                        .IsRequired();

                    b.Property<string>("KorisnickoIme")
                        .IsRequired();

                    b.Property<string>("Lozinka")
                        .IsRequired();

                    b.Property<string>("Prezime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Osoba");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Osoba");
                });

            modelBuilder.Entity("EMarketNovi.Models.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("KolicinaNaStanju");

                    b.Property<double>("KolicinaUPakovanju");

                    b.Property<bool>("NaAkciji");

                    b.Property<int?>("NarudzbaId");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<double>("NovaCijena");

                    b.Property<string>("Proizvodjac");

                    b.HasKey("ProizvodID");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("Proizvod");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Proizvod");
                });

            modelBuilder.Entity("EMarketNovi.Models.StavkaNarudzbe", b =>
                {
                    b.Property<int>("StavkaNarudzbeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbaId");

                    b.Property<int>("ProizvodId");

                    b.HasKey("StavkaNarudzbeId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("StavkaNarudzbe");
                });

            modelBuilder.Entity("EMarketNovi.Models.Dostavljac", b =>
                {
                    b.HasBaseType("EMarketNovi.Models.Osoba");

                    b.ToTable("Dostavljac");

                    b.HasDiscriminator().HasValue("Dostavljac");
                });

            modelBuilder.Entity("EMarketNovi.Models.Klijent", b =>
                {
                    b.HasBaseType("EMarketNovi.Models.Osoba");

                    b.Property<string>("AdresaIsporuke");

                    b.Property<int>("BrojBodova");

                    b.Property<string>("Odgovor");

                    b.Property<string>("SigurnosnoPitanje");

                    b.ToTable("Klijent");

                    b.HasDiscriminator().HasValue("Klijent");
                });

            modelBuilder.Entity("EMarketNovi.Models.Menadzer", b =>
                {
                    b.HasBaseType("EMarketNovi.Models.Osoba");

                    b.ToTable("Menadzer");

                    b.HasDiscriminator().HasValue("Menadzer");
                });

            modelBuilder.Entity("EMarketNovi.Models.HigijenskiProizvod", b =>
                {
                    b.HasBaseType("EMarketNovi.Models.Proizvod");

                    b.ToTable("HigijenskiProizvod");

                    b.HasDiscriminator().HasValue("HigijenskiProizvod");
                });

            modelBuilder.Entity("EMarketNovi.Models.PrehrambeniProizvod", b =>
                {
                    b.HasBaseType("EMarketNovi.Models.Proizvod");

                    b.Property<string>("SastavProizvoda");

                    b.ToTable("PrehrambeniProizvod");

                    b.HasDiscriminator().HasValue("PrehrambeniProizvod");
                });

            modelBuilder.Entity("EMarketNovi.Models.VocePovrce", b =>
                {
                    b.HasBaseType("EMarketNovi.Models.Proizvod");

                    b.ToTable("VocePovrce");

                    b.HasDiscriminator().HasValue("VocePovrce");
                });

            modelBuilder.Entity("EMarketNovi.Models.Narudzba", b =>
                {
                    b.HasOne("EMarketNovi.Models.Klijent", "KlijentVeza")
                        .WithMany()
                        .HasForeignKey("Klijent");
                });

            modelBuilder.Entity("EMarketNovi.Models.Proizvod", b =>
                {
                    b.HasOne("EMarketNovi.Models.Narudzba")
                        .WithMany("Proizvodi")
                        .HasForeignKey("NarudzbaId");
                });

            modelBuilder.Entity("EMarketNovi.Models.StavkaNarudzbe", b =>
                {
                    b.HasOne("EMarketNovi.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EMarketNovi.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
